#+TITLE: Editors 1 Pearls

#+BEGIN_EXPORT html
<pre>
<code>> ./blog-1/01_software/01_editors/02_pearls/editors_1_pearls.html</code>
</pre>
#+END_EXPORT

[[https://hnvy.github.io/blog-1/][Home page]] - [[https://github.com/hnvy/blog-1/edit/main/src/01_software/01_editors/02_pearls/editors_1_pearls.org][ESotP]]

-----

* Introduction
:PROPERTIES:
:CUSTOM_ID: intro
:END:
See [[https://hnvy.github.io/about.html#system][this]].

* E#008 (2021-05-24) - day 0. (E)
:PROPERTIES:
:CUSTOM_ID: org289653e
:END:

[[file:../01_logs/editors_1_logs.org::#org1795ff3][Link to log entry]]
- ~Ctrl~ in Emacs is writter as ~C~, ~Meta~ (aka ~Alt~) as ~M~, and ~Shift~ as ~S~
- You can launch the Emacs tutorial using ~C-h~ and then pressing the letter ~t~

* E#007 (2022-07-08) - contents table in plain text. (V)
:PROPERTIES:
:CUSTOM_ID: org730bd82
:END:

[[file:../01_logs/editors_1_logs.org::#org7018e49][Link to log entry]]
- Encode your headings in Vim using ~sha256~
- Type ~:let @"=sha256('____')~ (replace the ~____~ the heading title)
- Paste the ~sha256~ hash at the start of the heading line (so you end up with something like this ~HASH# Heading 1~)
- Yank the ~HASH# Heading 1~ line and paste it at the start of your document under a ~# Table of Contents~ heading
- Place the cursor at a hash, and press ~#~ to jump to the corresponding heading
- You can use the following mapping to assist you with the above: ~nmap <M-0> ^v$hy:let @"=sha256('<C-r>"')<CR>Pyygg~ (this maps the steps 1-6 to ~Alt-0~. You can then go down and paste the content using ~p~).

* E#006 (2022-03-05) - Vim, what does X mean? (V)
:PROPERTIES:
:CUSTOM_ID: org601de09
:END:

[[file:../01_logs/editors_1_logs.org::#org5bcae9c][Link to log entry]]
- To search for things on Google from within Vim, add the following code to your ~vimrc~:
  - ~vmap <C-3> "zy:let @z = substitute(@z,' ','+','g')<CR>:exec ":silent ! start https://www.google.com/search?q=". @z. ""<CR><CR>~
- This is how it works:
  - Go into Visual mode by pressing ~v~, and highlight the words of interest
  - Press ~Ctrl+3~ (by modifying the ~<C-3>~ in the line of code above, you can make this keyboard shortcut to whatever you want)

* E#005 (2021-05-21) - jump like a rabbit! (V)
:PROPERTIES:
:CUSTOM_ID: org35f3b8c
:END:

[[file:../01_logs/editors_1_logs.org::#orgf9b7ba1][Link to log entry]]
- Vim has several different modes. You use Normal mode to navigate through your text. Whereas you use Insert mode to insert text (obviously). Typing ~:~ will activate Command mode.
- ~w~ to jump FORWARD to the start of the next word in a sentence (thinks that hyphens, dots, commas, etc. are actually spaces, and will hence treat them as such). For example, "Vim-is-a-modal-text-editor" will be treated as having 11 words.
  - ~e~ will do the same thing, except it will jump to the end of the current word.
  - ~b~ will do the same thing, except it goes BACKWARD.
- ~W~ to jump FORWARD to the start of the next word in a sentence (thinks that ONLY the words separated by spaces are true words). For example, "Vim-is-a-modal-text-editor" will be treated as having only one word.
  - ~E~ will do the same thing, except it will jump to the end of the current word.
  - ~B~ will do the same thing, except it goes BACKWARD.
- Save and exit. See this [[../02_pearls/editors_1_pearls.org#e3-21042021---notepad--vim][pearl entry]] to learn more about a third method.:
   - ~:x~ will do the same thing as ~:wq~ except that it will not save the file if you have not made a change.
   - ~ZZ~ will do the same thing as ~:x~ (and hence ~:wq~).

* E#004 (2021-05-10) - a clipboard dilemma. (V)
:PROPERTIES:
:CUSTOM_ID: org936d260
:END:

[[file:../01_logs/editors_1_logs.org::#orgd75c69a][Link to log entry]]
- ~yy~ to yank (copy) the line into the Vim register.
  - Combine this with ~p~ to get ~yyp~ and hence duplicate the current line.
- ~yw~ to yank (copy) the word under the cursor into the Vim register.
- ~p~ to paste the content stored in the Vim register AFTER the cursor.
- ~P~ to paste the content stored in the Vim register BEFORE the cursor.
- ~u~ to undo a change.
- ~U~ to undo all changes on the CURRENT line.
- ~Ctrl+r~ to redo.
- Go to line X
  - ~:~ and then any number of your choice. This will take you to that particular line in your current file. So, ~:33~ will take me to line 33.
  - Type a number followed by ~G~ (e.g., the example above would be ~33G~) to get the same result.
  - Type a number followed by ~gg~ (e.g., the example above would be ~33gg~) to get the same result.
- ~/~ followed by any word of your choice to search FORWARD. After that, you can press ~n~ to cycle through the matches (use ~N~ to search in the opposite direction).
- ~?~ followed by any word of your choice to search BACKWARD. After that, you can press ~n~ to cycle through the matches (use ~N~ to search in the opposite direction).

* E#003 (2021-04-21) - Notepad++ > Vim?! (V)
:PROPERTIES:
:CUSTOM_ID: org4016a33
:END:

[[file:../01_logs/editors_1_logs.org::#orga8b1a4c][Link to log entry]]
- ~x~ to delete the character AFTER the cursor.
- ~X~ to delete the character BEFORE the cursor.
- ~A~ to insert text at the end of the line.
- ~I~ to insert text at the start of the line.
- ~a~ to insert text AFTER the cursor.
- ~i~ to insert text BEFORE the cursor.
- ~dd~ to delete the whole line.
- ~d$~ or ~D~ to delete from the current position to the end of the line.
- ~:wq~ to write (hence the ~w~) the changes, and then quit Vim (hence the ~q~). This will save your buffer whether or not you made a change.

* E#002 (2021-04-20) - vimtutor. (V)
:PROPERTIES:
:CUSTOM_ID: org44339bb
:END:

[[file:../01_logs/editors_1_logs.org::#org5f3b26d][Link to log entry]]
- The ~vimtutor~ file is located in ~/Vim/vim82/tutor~.
- ~:set guifont=*~ to change the font of the interface.
- ~i~ to enter Insert mode.
- Use the Escape button, ~Esc~, to return to Normal mode.
- Whilst in Normal mode, you can move up, down, right, and left by using the following keys: ~k~, ~j~, ~l~, and ~h~, respectively (remember, ~j~ looks like a down arrow!).

* E#001 (2021-04-19) - day 0. (V)
:PROPERTIES:
:CUSTOM_ID: org6bad0ce
:END:

[[file:../01_logs/editors_1_logs.org::#org3197b89][Link to log entry]]
- To enter commands into Vim, you should write ~:~. After doing so, you will notice that your cursor has moved to the bottom of the screen.
- ~:q!~ to quit Vim without saving the changes.
